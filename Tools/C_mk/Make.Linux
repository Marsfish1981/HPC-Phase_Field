# Make for Linux

#
# Generic C++ stuff.
#
ifeq ($(COMP),PathScale)
  CXX = pathCC
  CC  = pathcc
  ifeq ($(USE_MPI),TRUE)
    CXX = mpicxx
  endif

  ifeq ($(BL_FAST),TRUE)
    CXXOPTF += -Ofast -Wno-deprecated
  else
    CXXOPTF += -O3 -Wno-deprecated
  endif

  CXXDEBF += -O0 -g -Wno-deprecated

  ifeq ($(USE_OMP),TRUE)
    CXXOPTF += -mp
    CXXDEBF += -mp
  endif
else
ifeq ($(COMP),Cray)
  CXX = CC
  CC  = cc

  CXXOPTF += -O2 -h nomessage=7221 -hlist=a
  CXXDEBF += -g -O0

  # This makes Cray (more specifically cce/8.3.11 on edison) able to compile
  # the following c99 feature used in ZFILL macro in C_BaseLib/ArrayLim.H:
  #   my_function( &((Real []){x[0], x[1], 0.}[0]) );
  CXXOPTF += -h gnu
  CXXDEBF += -h gnu

  COPTF += -O2
  CDEBF += -g

  ifneq ($(USE_OMP),TRUE)
    CXXOPTF += -h noomp
    CXXDEBF += -h noomp
    COPTF += -h noomp
    CDEBF += -h noomp
  endif

  ifneq ($(USE_ACC),TRUE)
    CXXOPTF += -h noacc
    CXXDEBF += -h noacc
    COPTF += -h noacc
    CDEBF += -h noacc
  endif

  ifeq ($(USE_CXX11),TRUE)
       CXXOPTF += -hstd=c++11
       CXXDEBF += -hstd=c++11
  endif

else
ifeq ($(COMP),PGI)
  CXX = pgc++
  CC  = pgcc
  CXXDEBF += -g -O0

  COMP_VERSION := $(shell $(CXX) -V 2>&1 | grep 'target')
      
  ifeq ($(BL_FAST),TRUE)
    ifeq ($(WHICHLINUX), TITAN)
      CXXOPTF += -gopt  -O
    else
      COPTF += -gopt -fast
      CXXOPTF += -gopt -fast -Minline=levels:10
    endif
  else
    CXXOPTF += -gopt -O1
  endif

#  ifneq ($(USE_MPI),TRUE)
     override XTRALIBS += -pgf90libs
#  endif

  ifeq ($(USE_OMP),TRUE)
    CXXOPTF += -mp=nonuma
    CXXDEBF += -mp=nonuma
    COPTF += -mp=nonuma
    CDEBF += -mp=nonuma
  endif

  ifeq ($(USE_ACC),TRUE)
    CXXOPTF += -fast -acc -ta=nvidia -mcmodel=medium
    CXXDEBF += -fast -acc -ta=nvidia -mcmodel=medium
    COPTF += -fast -acc -ta=nvidia -lcudart -mcmodel=medium
    CDEBF += -fast -acc -ta=nvidia -lcudart -mcmodel=medium
    CXXEXEFLAGS += -lcudart
  else
    CXXOPTF += -noacc
    CXXDEBF += -noacc
    COPTF += -noacc
    CDEBF += -noacc
  endif

  ifeq ($(USE_CXX11),TRUE)
       CXXOPTF += --c++11
       CXXDEBF += --c++11
  endif

else
ifeq ($(COMP),xlC)
  CXX     := xlC
  CXXOPTF += -O2 -qsuppress=1500-029 -qmaxmem=-1
  CXXDEBF += -g -qcheck=bounds
endif
endif
endif
endif

#
# Now Fortran stuff.
#
FORT_CPP := cpp -E -traditional-cpp -P

ifeq ($(FCOMP),PathScale)
  FC  = pathf95
  fC  = pathf95
  F90 = pathf95 
  FFLAGS += -fno-second-underscore
  fFLAGS += -fno-second-underscore
  F90FLAGS +=
  FDEBF += -O0 -g
  fDEBF += -O0 -g

  ifeq ($(BL_FAST),TRUE)
    FOPTF += -Ofast
    fOPTF += -Ofast
  else
    FOPTF += -O3
    fOPTF += -O3
  endif

  ifeq ($(USE_OMP),TRUE)
    FOPTF += -mp
    fOPTF += -mp
    FDEBF += -mp
    fDEBF += -mp
  endif

  fFLAGS += -extend-source -module $(objEXETempDir)
  FORT_CPP := cpp -traditional
  override XTRALIBS += -lpathfortran  #-lmv
#  LDFLAGS += -static
else
ifeq ($(FCOMP),Cray)
  FC  = ftn
  fC  = ftn
  F90 = ftn 
  FFLAGS += -hlist=a
  fFLAGS += -N 132 -I$(objEXETempDir) -J $(objEXETempDir) -em -hlist=a
  F90FLAGS += -hlist=a
  FDEBF += -g -O0
  fDEBF += -g -O0

  FOPTF += -O2
  fOPTF += -O2

  ifneq ($(USE_OMP),TRUE)
    FOPTF += -h noomp
    fOPTF += -h noomp
    FDEBF += -h noomp
    fDEBF += -h noomp
  endif

  ifneq ($(USE_ACC),TRUE)
    FOPTF += -h noacc
    fOPTF += -h noacc
    FDEBF += -h noacc
    fDEBF += -h noacc
  endif

  FORT_CPP := cpp -traditional
  override XTRALIBS += 
#  LDFLAGS += -static
else
ifeq ($(FCOMP),Lahey)
  FC    := lf95 --ml cdecl
  fC    := $(FC)
  # FDEBF += -H aesu
  FDEBF += --chk u
  FDEBF += --chk
  fDEBF += --chk u
  fDEBF += --chk
  # fOPTF += -K fast
  LIBRARY_LOCATIONS += /usr/local/lf9561/lib
  override XTRALIBS += -lfj9f6 -lfj9i6 -lfj9e6
else
ifeq ($(FCOMP),Absoft)
  FC  := f90 -B108 -YEXT_NAMES=LCS
  fC  := $(FC)
  LIBRARY_LOCATIONS += /usr/absoft/lib
  override XTRALIBS += -lfio -lf77math
  #override FORTLINK := LOWERCASE
else

ifeq ($(FCOMP),PGI)
  FC := pgf95
  fC := $(FC)

  FCOMP_VERSION := $(shell $(FC) -V 2>&1 | grep 'target')

  ifeq ($(BL_FAST),TRUE)
    FOPTF  += -fast
    fOPTF  += -fast
  else
    FOPTF  += -O
    fOPTF  += -O
  endif

  ifeq ($(USE_OMP),TRUE)
    FOPTF += -mp,nonuma -Minfo=mp
    fOPTF += -mp,nonuma -Minfo=mp
    FDEBF += -mp,nonuma -Minfo=mp
    fDEBF += -mp,nonuma -Minfo=mp
  endif

  ifeq ($(USE_ACC),TRUE)
    FOPTF += -acc -Minfo=acc -ta=nvidia -lcudart -mcmodel=medium
    fOPTF += -acc -Minfo=acc -ta=nvidia -lcudart -mcmodel=medium
    FDEBF += -acc -Minfo=acc -ta=nvidia -lcudart -mcmodel=medium
    fDEBF += -acc -Minfo=acc -ta=nvidia -lcudart -mcmodel=medium
  else
    FOPTF += -noacc
    fOPTF += -noacc
    FDEBF += -noacc
    fDEBF += -noacc
  endif

  fFLAGS += -Mextend -module $(objEXETempDir) -I$(objEXETempDir)
  ifneq ($(USE_ACC), TRUE)
    FOPTF += -gopt
    fOPTF += -gopt
    FDEBF += -g #-C
    fDEBF += -g #-C
  endif
#  LIBRARY_LOCATIONS += /usr/pgi/linux86/lib
else
ifeq ($(FCOMP),Intel)
  # mostly in Make.defs
  FDEBF += $(INTEL_EXTRA_DEBUG_FLAGS)
  FOPTF += $(INTEL_EXTRA_OPT_FLAGS)
  fDEBF += $(INTEL_EXTRA_DEBUG_FLAGS)
  fOPTF += $(INTEL_EXTRA_OPT_FLAGS)
else
ifeq ($(FCOMP),f77)
  FC       := g77 -fno-second-underscore
  fC       := $(FC)
  # default g77/f77 version
  FOPTF += -O
  fOPTF += -O
  FDEBF += -g
  fDEBF += -g
  #DEFINES += -DBL_FORT_USE_UNDERSCORE
  #override XTRALIBS +=  -lf2c
# LIBRARY_LOCATIONS += /usr/lib/gcc-lib/i386-redhat-linux/2.96
  override XTRALIBS += -lg2c
  FDEBF += -ffortran-bounds-check 
  FDEBF += -Wimplicit
  fDEBF += -Wimplicit
  fDEBF += -ffortran-bounds-check
else
ifeq ($(FCOMP),xlf)

  ifeq ($(USE_OMP),TRUE)
    CXX := xlc++_r
    CC  := xlc_r
    FC  := xlf_r
    fC  := xlf_r
    F90 := xlf90_r

    F90FLAGS += -qsmp=noauto:omp
    FFLAGS   += -qsmp=noauto:omp
    CFLAGS   += -qsmp=noauto:omp
  else
    CXX := xlc++
    CC  := xlc
    FC  := xlf
    fC  := xlf
    F90 := xlf90
  endif

  F90FLAGS += -qsuffix=f=f90 -qfree=f90 -qmoddir=$(fmoddir) -I$(fmoddir)

  ifeq ($(PRECISION),FLOAT)
    FOPTF += -O2 -qarch=auto -qtune=auto -qmaxmem=-1
    FDEBF += -g
    fOPTF += -O2 -qarch=auto -qtune=auto -qmaxmem=-1
    fDEBF += -g -C
  else
    FOPTF += -O2 -qdpc -qarch=auto -qtune=auto -qmaxmem=-1
    FDEBF += -qdpc -g
    fOPTF += -O2 -qdpc -qarch=auto -qtune=auto -qmaxmem=-1
    fDEBF += -qdpc -g -C
  endif

  override FORTLINK := LOWERCASE
  NEEDS_FLUSH_F := TRUE
endif
endif
endif
endif
endif
endif
endif
endif
#
# Overrides for specific machines.
#
ifeq ($(WHICHLINUX), FYR)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := mpicxx
    CC  := mpicc
    FC  := mpif90
    F90 := mpif90
    fC  := mpif90
  endif
endif

ifeq ($(WHICHLINUX), RANGER)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := mpicxx
    FC  := mpif90
    F90 := mpif90
    fC  := mpif90 
  endif
endif

ifeq ($(WHICHLINUX), DARTER)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := CC
    FC  := ftn
    F90 := ftn
    fC  := ftn
  endif
endif

ifeq ($(WHICHLINUX), GRACE)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := CC -target=linux
    CC  := cc -target=linux
    FC  := ftn -target=linux
    F90 := ftn -target=linux
    fC  := ftn -target=linux
  endif
endif

ifeq ($(WHICHLINUX), ORION)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := mpicxx
  endif
endif


ifeq ($(WHICHLINUX), FREEDOM)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := CC -target=linux
    CC  := cc -target=linux
    FC  := ftn -target=linux
    F90 := ftn -target=linux
    fC  := ftn -target=linux
  endif
endif


ifeq ($(WHICHLINUX), GARNET)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := CC -target=linux
    CC  := cc -target=linux
    FC  := ftn -target=linux
    F90 := ftn -target=linux
    fC  := ftn -target=linux
  endif
  ifeq ($(USE_IPM),TRUE)
    ifeq ($(COMP),PGI)
      LIBRARIES += $(IPM)
    else
      LIBRARIES += $(IPM_GNU)
    endif
  endif
endif

ifeq ($(WHICHLINUX), HERA)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := mpig++
    CC  := gcc
    FC  := gfortran
    F90 := gfortran
    fC  := gfortran
  endif
endif

ifeq ($(WHICHLINUX), CAB)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    ifeq ($(COMP), Intel)
      CXX := mpiicc
      CC  := mpiicc
      F90 := mpiifort
      FC  := mpiifort
      fC  := mpiifort
    else
      CXX := mpiCC
      CC  := gcc
      FC  := gfortran
      F90 := gfortran
      fC  := gfortran
    endif
  endif
endif

ifeq ($(WHICHLINUX), SYRAH)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    ifeq ($(COMP), Intel)
      CXX := mpiicc
      CC  := mpiicc
      F90 := mpiifort
      FC  := mpiifort
      fC  := mpiifort
    else
      CXX := mpiCC
      CC  := gcc
      FC  := gfortran
      F90 := gfortran
      fC  := gfortran
    endif
  endif
endif

ifeq ($(WHICHLINUX), CORI)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := CC
    CC  := cc
    FC  := ftn
    F90 := ftn
    fC  := ftn
  endif
#  ifeq ($(USE_MPI3),TRUE)
  # http://www.nersc.gov/users/computational-systems/edison/updates-and-status/open-issues/mpi-3-atomic-performance-degradation-since-cray-mpich7-3-0/
#    override XTRALIBS += -Wl,--whole-archive,-ldmapp,--no-whole-archive
#  endif
endif

ifeq ($(WHICHLINUX), EDISON)
  DEFINES += -DMPICH_SKIP_MPICXX
  ifeq ($(USE_MPI),TRUE)
    CXX := CC 
    CC  := cc 
    FC  := ftn
    F90 := ftn
    fC  := ftn
  endif
  ifeq ($(USE_IPM),TRUE)
    LIBRARIES += $(IPM_GNU)
  endif
  ifeq ($(USE_DUMPI),TRUE)
    LIBRARIES += $(DUMPI_LINK_OPTS)
  endif
  ifeq ($(USE_MPI3),TRUE)
  # http://www.nersc.gov/users/computational-systems/edison/updates-and-status/open-issues/mpi-3-atomic-performance-degradation-since-cray-mpich7-3-0/
    override XTRALIBS += -Wl,--whole-archive,-ldmapp,--no-whole-archive
  endif
endif

ifeq ($(HOSTNAME), hyades.ucsc.edu)
  ifeq ($(USE_MPI),TRUE)
    ifeq ($(COMP), Intel)
      CXX := mpiicc
      CC  := mpiicc
      F90 := mpiifort
      FC := mpiifort
      fC := mpiifort
      
      ifeq ($(USE_OMP),TRUE)
        CXXOPTF += -mt_mpi
	CXXDEBF += -mt_mpi
	LDFLAGS += -mt_mpi
	F90FLAGS += -mt_mpi
	FFLAGS += -mt_mpi
	fFLAGS += -mt_mpi
      endif
    else
      CXX := mpicxx
      CC  := mpicc
      F90 := mpifc
      FC := mpifc
      fC := mpifc
    endif
  endif
endif 

ifeq ($(WHICHLINUX), JVN)
  ifeq ($(COMP),Intel)
    CXX = icc
    CXXOPTF +=
    CXXDEBF += -g
    ifeq ($(USE_MPI),TRUE)
      CXX = mpiCC
    endif
  endif
endif


ifeq ($(WHICHLINUX), HYPERION)
  ifeq ($(COMP),Intel)
    CXX = icpc
    CXXOPTF = -O3 -ip -mp
    CXXDEBF = -g
    ifeq ($(USE_MPI),TRUE)
# MAS: 4.17.2008
# works for chaos3, but doesn't seem to work for chaos4, so hard
# code everything contained in this mpiicpc script -- to see what's
# contained in mpiicpc script, type "mpiicpc -show"
#      CXX = mpiicpc
      CXX = icpc -Wl,-rpath,/usr/local/tools/mvapich-intel/lib/shared \
	    -DUSE_STDARG -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 \
            -DHAVE_UNISTD_H=1 -DHAVE_STDARG_H=1 -DUSE_STDARG=1 \
	    -DMALLOC_RET_VOID=1 -I/usr/local/tools/mvapich-intel/include \
	    -L/usr/local/tools/mvapich-intel/lib/shared -L/usr/lib64 \
	    -L/usr/local/tools/mvapich-intel/lib
      CXX = icpc -Wl,-rpath,/usr/local/tools/mvapich-intel/lib/shared \
            -DUSE_STDARG -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_UNISTD_H=1 \
            -DHAVE_STDARG_H=1 -DUSE_STDARG=1 -DMALLOC_RET_VOID=1 \
            -I/usr/local/tools/mvapich-intel/include \
            -L/usr/local/tools/mvapich-intel/lib/shared -L/usr/lib64 \
            -L/usr/local/tools/mvapich-intel/lib -lmpich -i-dynamic
    endif
  endif
  ifeq ($(FCOMP),Intel)
    FOPTF = -O3 -ip -mp
    fOPTF = -O3 -ip -mp
  endif
  ifeq ($(COMP),PGI)
    CXX = pgc++    
    CXXOPTF = -fast
    CXXDEBF = -g
    FC = pgf90
    fC = pgf90
    ifeq ($(USE_MPI),TRUE)
      CXX = mpipgCC
    endif
  endif
endif


ifeq ($(WHICHLINUX), COLUMBIA)
  FOPTF   = -O3
  fOPTF   = -O3
  CXXOPTF = -O3
  ifeq ($(COMP),Intel)
    FOPTF   += -ip
    fOPTF   += -ip
    CXXOPTF += -ip
  endif
  DEFINES += -DCOLUMBIA
endif

ifeq ($(WHICHLINUX), ALPHACLUSTER)
  FC  := fort -assume nounderscore
#  FC  := fort
  fC  := $(FC)
  override FORTLINK := LOWERCASE
  #FOPTF += -O5 -fast -transform_loops -speculate all -automatic
  FOPTF = -O5 -fast
  FOPTF = -O2
  fOPTF = -O5 -fast
  fOPTF = -O2
  LIBRARY_LOCATIONS += /usr/local/pkg/gcc-2.95.1-generic/lib/gcc-lib/alpha-redhat-linux/2.95.1
             #  this should be made into a link to the current version  ^^^^^^
  LIBRARIES += -lfor
endif

CXXPRFF += -pg
FPRF    += -pg

override XTRALIBS += -lm

ifeq ($(FCOMP), gfortran)
  ifeq ($(__gcc_major_version),4)
    ifeq ($(__gcc_minor_version),9)
      override XTRALIBS += -lquadmath
    endif
  endif
endif

ifeq ($(WHICHLINUX), PCCLUSTER)
  LIBRARY_LOCATIONS += /usr/local/pkg/gcc/lib/gcc-lib/i686-pc-linux-gnu/2.95.1
             #  this should be made into a link to the current version  ^^^^^^
endif

# These are the machines in Gottingen
ifeq ($(HOST), c1) 
  CXX = mpic++   
  FC  = mpif90
endif    
ifeq ($(HOST), c2) 
  CXX = mpic++   
  FC  = mpif90
endif    
ifeq ($(HOST), c3) 
  CXX = mpic++   
  FC  = mpif90
endif    
ifeq ($(HOST), c4) 
  CXX = mpic++   
  FC  = mpif90
endif    

ifeq ($(WHICHLINUX), BABBAGE)
  ifeq ($(USE_MPI),TRUE)
    CXX := mpiicpc
    CC  := mpiicc
    FC  := mpiifort
    F90 := mpiifort
    fC  := mpiifort
  endif
endif

# For running natively on the MIC cards
ifeq ($(MIC), TRUE)
  CXXOPTF += -mmic
  CXXDEBF += -mmic
  FOPTF += -mmic
  FDEBF += -mmic
  fOPTF += -mmic
  fDEBF += -mmic
endif

ifeq ($(WHICHLINUX), BABBAGE)
ifeq ($(MIC), TRUE)
# Because the linker on Babbage isn't very smart
  override XTRALIBS += -lifcore -Wl,-rpath,$(MIC_LIBRARY_PATH)
endif
endif

# Compiler flags for profiling MPI calls using Intel Trace Analyzer and
# Collector. The "itac" module on Babbage will automatically populate the
# VT_LIB_DIR environment variable. The "-trace" option is fairly lightweight
# and traces only MPI calls; you can trace user-defined functions as well using
# "-tcollect" instead of "-trace" but this generates a HUGE amount of data, so
# don't use it unless you know what you're doing.
ifeq ($(COMP),Intel)
  ifeq ($(FCOMP),Intel)
    ifeq ($(ITAC_TRACE), TRUE)
      CXXOPTF += -trace
      CXXDEBF += -trace
      FOPTF += -trace
      fOPTF += -trace
      override XTRALIBS += -L${VT_LIB_DIR}
    endif
  endif
endif


ifeq ($(WHICHLINUX), MIRA)

  ifeq ($(COMP), IBM)
    ifeq ($(USE_OMP),TRUE)
      ifeq ($(USE_MPI),TRUE)
        CXX := mpixlcxx_r
        CC  := mpixlc_r
      else
        CXX := bgxlC_r
        CC  := bgxlc_r
      endif
      CFLAGS   += -qsmp=noauto:omp
      CXXFLAGS += -qsmp=noauto:omp
    else
      ifeq ($(USE_MPI),TRUE)
        CXX := mpixlcxx
        CC  := mpixlc
      else
        CXX := bgxlC
        CC  := bgxlc
      endif
    endif
    CFLAGS   += -g
    CXXFLAGS += -g
  endif

  ifeq ($(FCOMP), IBM)
    ifeq ($(USE_OMP),TRUE)
      ifeq ($(USE_MPI),TRUE)
        FC  := mpixlf95_r -qfixed=72
        fC  := mpixlf95_r -qfixed=72
        F90 := mpixlf95_r
      else
        FC  := bgxlf_r -qfixed=72
        fC  := bgxlf_r -qfixed=72
        F90 := bgxlf95_r
      endif
      FFLAGS += -qsmp=noauto:omp
      fFLAGS += -qsmp=noauto:omp
    else
      ifeq ($(USE_MPI),TRUE)
        FC  := mpixlf95 -qfixed=72
        fC  := mpixlf95 -qfixed=72
        F90 := mpixlf95
      else
        FC  := bgxlf95 -qfixed=72
        fC  := bgxlf95 -qfixed=72
        F90 := bgxlf95
      endif
    endif
    FFLAGS   += -I $(fmoddir) -qmoddir=$(fmoddir)
    F90FLAGS += -I $(fmoddir) -qmoddir=$(fmoddir)
    fFLAGS   += -I $(fmoddir) -qmoddir=$(fmoddir)

    FFLAGS   += -g
    F90FLAGS += -g
    fFLAGS   += -g
  endif

  # Even though flush() is in the Fortran standard, the IBM XL Fortran
  # compilers for some reason only understand the symbol flush_() (note the
  # underscore). This flag lets us call flush() without the underscore.
  FFLAGS   += -qextname=flush
  fFLAGS   += -qextname=flush
  F90FLAGS += -qextname=flush

  CXXOPTF += -O2
  FOPTF   += -O2
  fOPTF   += -O2

  CXXDEBF += -O0
  FDEBF   += -O0
  fDEBF   += -O0

  ifeq ($(COMP), IBM)
    ifeq ($(FCOMP), IBM)
      # manual linkage options suggested by ALCF doc page for mixing F90 with C++
      override XTRALIBS += -L/soft/compilers/ibmcmp-nov2012/xlf/bg/14.1/lib64 -lxlopt -lxl -lxlf90 -lxlfmath
      # One of these libraries has "aio_*" functions which libxlf90.a needs.
      # The MPI wrappers will pick it up but the serial wrappers won't. I just
      # copied this linkage blob from the MPI wrappers by doing "mpixlcxx_r
      # -show".
      override XTRALIBS += -L/bgsys/drivers/V1R2M2/ppc64/comm/lib -L/bgsys/drivers/V1R2M2/ppc64/comm/lib -L/bgsys/drivers/V1R2M2/ppc64/comm/lib64 -L/bgsys/drivers/V1R2M2/ppc64/comm/lib -L/bgsys/drivers/V1R2M2/ppc64/spi/lib -L/bgsys/drivers/V1R2M2/ppc64/comm/sys/lib -L/bgsys/drivers/V1R2M2/ppc64/spi/lib -L/bgsys/drivers/V1R2M2/ppc64/comm/sys/lib -L/bgsys/drivers/V1R2M2/ppc64/comm/lib64 -L/bgsys/drivers/V1R2M2/ppc64/comm/lib -L/bgsys/drivers/V1R2M2/ppc64/spi/lib -L/bgsys/drivers/V1R2M2/ppc64/comm/lib-lopa-xl -lmpl-xl -lpami-gcc -lSPI -lSPI_cnk -lrt -lpthread -lstdc++ -lpthread
    endif
  endif

endif

ifeq ($(HOST),orga)
  override XTRALIBS += -lquadmath
endif
