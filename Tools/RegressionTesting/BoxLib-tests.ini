[main]
testTopDir = /home/regtester/RegTesting/rt-BoxLib
webTopDir  = /home/regtester/RegTesting/rt-BoxLib/web

MAKE = make
sourceTree = BoxLib
numMakeJobs = 8

COMP = g++
FCOMP = gfortran
add_to_c_make_command = TEST=TRUE USE_ASSERTION=TRUE
add_to_f_make_command = TEST=t

# suiteName is the name prepended to all output directories
suiteName = BoxLib

reportActiveTestsOnly = 1

# Add "GO UP" link at the top of the web page?
goUpLink = 1

# email
sendEmailWhenFail = 1
#emailTo = weiqunzhang@lbl.gov, ASAlmgren@lbl.gov
emailTo = weiqunzhang@lbl.gov, msday@lbl.gov
emailBody = Check https://ccse.lbl.gov/pub/RegressionTesting/BoxLib/ for more details.

# MPIcommand should use the placeholders:
#   @host@ to indicate where to put the hostname to run on
#   @nprocs@ to indicate where to put the number of processors
#   @command@ to indicate where to put the command to run
#
# only tests with useMPI = 1 will run in parallel
# nprocs is problem dependent and specified in the individual problem
# sections.

#MPIcommand = mpiexec -host @host@ -n @nprocs@ @command@
MPIcommand = /usr/bin/mpiexec -n @nprocs@ @command@
MPIhost = 

[BoxLib]
dir = /home/regtester/RegTesting/BoxLib/
branch = "development"

# individual problems follow

[F_MG_Dir_ord3_3D] 
buildDir = Tests/LinearSolvers/ComparisonTest
inputFile = inputs-rt-Dir-ord3
dim = 3
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = plot
testSrcTree = C_Src

[F_MG_Dir_ord2_3D] 
buildDir = Tests/LinearSolvers/ComparisonTest
inputFile = inputs-rt-Dir-ord2
dim = 3
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = plot
testSrcTree = C_Src

[F_MG_Neu_3D] 
buildDir = Tests/LinearSolvers/ComparisonTest
inputFile = inputs-rt-Neu
dim = 3
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = plot
testSrcTree = C_Src

[F_MG_Dir_ord3_2D]
buildDir = Tutorials/MultiGrid_C
inputFile = inputs-rt-f-ord3
dim = 2
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = GPHI-F90
testSrcTree = C_Src

[F_MG_Dir_ord2_2D]
buildDir = Tutorials/MultiGrid_C
inputFile = inputs-rt-f-ord2
dim = 2
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = GPHI-F90
testSrcTree = C_Src

[F_MG_Neu_2D]
buildDir = Tutorials/MultiGrid_C
inputFile = inputs-rt-f-neu
dim = 2
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = GPHI-F90
testSrcTree = C_Src

[C_MG_Dir_ord3_2D]
buildDir = Tutorials/MultiGrid_C
inputFile = inputs-rt-c-ord3
dim = 2
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = GPHI-CPP
testSrcTree = C_Src

[C_MG_Dir_ord2_2D]
buildDir = Tutorials/MultiGrid_C
inputFile = inputs-rt-c-ord2
dim = 2
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = GPHI-CPP
testSrcTree = C_Src

[C_MG_Neu_2D]
buildDir = Tutorials/MultiGrid_C
inputFile = inputs-rt-c-neu
dim = 2
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = GPHI-CPP
testSrcTree = C_Src

[C_MG_Neu_3D]
buildDir = Tutorials/MultiGrid_C
inputFile = inputs-rt-c-neu
dim = 3
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = GPHI-CPP
testSrcTree = C_Src

[Heat-expl] 
buildDir = Tutorials/HeatEquation_EX5_F
inputFile = inputs-rt-expl
dim = 3
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 3
compileTest = 0
doVis = 0
outputFile = plt00050
testSrcTree = F_Src

[Heat-impl] 
buildDir = Tutorials/HeatEquation_EX5_F
inputFile = inputs-rt-impl
dim = 3
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 3
compileTest = 0
doVis = 0
outputFile = plt00050
testSrcTree = F_Src

[AMR_Adv_C_2D] 
buildDir = Tutorials/AMR_Adv_C/Exec/UniformVelocity
inputFile = inputs
probinFile = probin
dim = 2
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 0
numthreads = 2
compileTest = 0
doVis = 0
testSrcTree = C_Src

[AMR_Adv_C_3D] 
buildDir = Tutorials/AMR_Adv_C/Exec/SingleVortex
inputFile = inputs
probinFile = probin
dim = 3
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
testSrcTree = C_Src

[AMR_Adv_F_2D] 
buildDir = Tutorials/AMR_Adv_F/Exec/UniformVelocity
inputFile = inputs_2d
dim = 2
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 0
numthreads = 2
compileTest = 0
doVis = 0
outputFile = plt00070
testSrcTree = F_Src

[AMR_Adv_F_3D] 
buildDir = Tutorials/AMR_Adv_F/Exec/SingleVortex
inputFile = inputs_3d
dim = 3
restartTest = 0
useMPI = 1
numprocs = 2
useOMP = 1
numthreads = 2
compileTest = 0
doVis = 0
outputFile = plt00140
testSrcTree = F_Src
